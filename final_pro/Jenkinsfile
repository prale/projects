pipeline {
    agent any

    parameters {
        string(name: 'vendor_name', defaultValue: 'vendor', description: 'Vendor name')
        string(name: 'vendor_user_role_arn', defaultValue: 'vendor_user_role_arn', description: 'ARN of User/Role in vendor account')
        string(name: 'vendor_vpc_id', defaultValue: 'vendor_vpc_id', description: 'VPC ID in the Vendor account')
        choice(name: 'permissions', choices: ['read', 'write', 'read_write'], description: 'Required permissions for the vendor')
    }

    environment {
        AWS_DEFAULT_REGION="us-east-1"
        awsCredentials = credentials('awsCredentials')
        boolean read = false
        boolean write = false
        boolean read_write = false
    }
    
    stages {

        stage('checkout') {
            steps {
                 git branch: 'main', credentialsId: 'c8d323bf-fe34-4694-b2b2-2de9783744d4', url: 'https://github.com/prale/projects.git'
                }
            }
        
        stage ("terraform init") {
            steps {
                dir('final_pro'){
                    sh 'terraform init'
                }
            }
        }

        stage ("Permissions") {
            steps {
                script {
                    if (params.permissions == "read")
                    {
                        export read = true       
                    } else if (params.permissions == "write")
                    {
                        export write = true
                    } else (params.permissions == "read_write")
                    {
                        export read_write = true
                    }
                }
            }
        }
         
        stage ("terraform plan") {
            steps {
                dir('final_pro'){
                    sh "terraform plan \
                    -var 'vendor_name=${params.vendor_name}' \
                    -var 'vendor_user_role_arn=${params.vendor_user_role_arn}' \
                    -var 'vendor_vpc_id=${params.vendor_vpc_id}' "
                }   
            }
        }
       /*
        stage ("terraform apply") {
            steps {
                sh "terraform apply""
            }
        }
        
        stage ("terraform show") {
            steps {
                sh "terraform show"
            }
        }
        */
    }
}