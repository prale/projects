pipeline {
    agent any
    
    parameters {
        string(name: 'environment', defaultValue: 'terraform', description: 'Workspace/environment file to use for deployment')
        string(name: 'version', defaultValue: '', description: 'Version variable to pass to Terraform')
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    }

    environment {
        AWS_DEFAULT_REGION="us-east-1"
        awsCredentials = credentials('awsCredentials')
    }
    
    stages {

        stage ("test stage") {
            steps {
                sh '''
                aws ec2 describe-instances
                '''
            }
        }

        stage('checkout') {
            steps {
                 checkout scm
                }
            }
        
        stage ("terraform init") {
            steps {
                dir('final_pro'){
                    sh 'terraform init -input=false'
                }
            }
        }
        
        stage ("terraform plan") {
            steps {
                dir('final_pro'){
                    //sh 'terraform workspace select ${environment}'
                    sh "terraform plan -input=false -out tfplan -var 'version=${params.version}' --var-file=${params.environment}.tfvars"
                    sh 'terraform show -no-color tfplan > tfplan.txt'
            }
        }
        }
        /*
        stage ("terraform apply") {
            steps {
                sh "terraform apply -var-file="terraform.tfvars""
            }
        }
        
        stage ("terraform show") {
            steps {
                sh "terraform show"
            }
        }
        */
    }
}