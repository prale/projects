pipeline {
    agent any

    parameters {
        string(name: 'vendor_name', defaultValue: 'vendor', description: 'Vendor name')
        string(name: 'vendor_user_role_arn', defaultValue: 'vendor_user_role_arn', description: 'ARN of User/Role in vendor account')
        string(name: 'vendor_vpc_id', defaultValue: 'vendor_vpc_id', description: 'VPC ID in the Vendor account')
        choice(name: 'permissions', choices: ['read', 'write', 'read_write'], description: 'Required permissions for the vendor')
    }

    environment {
        AWS_DEFAULT_REGION="us-east-1"
        awsCredentials = credentials('awsCredentials')
        perm = true
    }
    
    stages {

        stage('checkout') {
            steps {
                 checkout scm
                }
            }
        
        stage ("terraform init") {
            steps {
                dir('final_pro'){
                    sh "terraform init -reconfigure -backend-config=\"region=us-east-1\" -backend-config=\"bucket=wba-mybucket\" -backend-config=\"key=logs/${params.vendor_name}/terraform.tfstate\" -backend-config=\"dynamodb_table=terraform-locklogs\""
                }
            }
        }

        stage ("terraform plan") {
            steps {
                dir('final_pro'){
                    script {
                    if (params.permissions == "read")
                    {
                        echo "Vendor require read permissions"
                        sh "terraform plan -input=false -out ${params.vendor_name}.tfplan \
                    -var 'vendor_name=${params.vendor_name}' \
                    -var 'vendor_user_role_arn=${params.vendor_user_role_arn}' \
                    -var 'vendor_vpc_id=${params.vendor_vpc_id}' \
                    -var 'read=true' "      
                    } else if (params.permissions == "write")
                    {
                        echo "Vendor require write permissions"
                        sh "terraform plan -input=false -out ${params.vendor_name}.tfplan \
                    -var 'vendor_name=${params.vendor_name}' \
                    -var 'vendor_user_role_arn=${params.vendor_user_role_arn}' \
                    -var 'vendor_vpc_id=${params.vendor_vpc_id}' \
                    -var 'write=true' " 
                    } else if (params.permissions == "read_write")
                    {
                        echo "Vendor require read_write permissions"
                        sh "terraform plan -input=false -out ${params.vendor_name}.tfplan \
                    -var 'vendor_name=${params.vendor_name}' \
                    -var 'vendor_user_role_arn=${params.vendor_user_role_arn}' \
                    -var 'vendor_vpc_id=${params.vendor_vpc_id}' \
                    -var 'read_write=true' "
                    }
                }
                echo "Validate config"
                sh "terraform validate"

                }   
            }
        }

        stage ("terraform apply") {
            steps {
                dir('final_pro'){
                 sh "terraform apply -input=false ${params.vendor_name}.tfplan"
                }
            }
        }
    
        stage ("terraform show") {
            steps {
                dir('final_pro'){
                sh "terraform show"
                }
            }
        }

    }
}